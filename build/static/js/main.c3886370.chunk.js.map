{"version":3,"sources":["components/Appointment.jsx","components/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Appointment","singleAppointment","deleteAppointment","className","pet","owner","date","time","symptoms","onClick","id","Form","addAppointmnet","useState","symptom","appointment","setAppointment","error","setError","handleChange","e","target","name","value","onSubmit","preventDefault","notEmpty","Object","values","every","trim","uuid","reset","type","placeholder","onChange","proTypes","handleSubmit","PropTypes","object","isRequired","App","initialAppointment","JSON","parse","localStorage","getItem","appointmentArr","setAppointmentArr","useEffect","setItem","stringify","newAppointmentArr","filter","apointment","title","length","uniqAppoinment","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3886370.chunk.js","sourcesContent":["import React from 'react';\nconst Appointment = ({singleAppointment, deleteAppointment}) => {\n\treturn (\n\t\t<div className=\"cita\">\n\t\t\t<p>Pet: <span>{singleAppointment.pet}</span></p>\n\t\t\t<p>Owner: <span>{singleAppointment.owner}</span></p>\n\t\t\t<p>Date: <span>{singleAppointment.date}</span></p>\n\t\t\t<p>Time: <span>{singleAppointment.time}</span></p>\n\t\t\t<p>Symptoms: <span>{singleAppointment.symptoms}</span></p>\n\n\t\t\t<button\n\t\t\t\tclassName=\"button eliminar u-full-width\"\n\t\t\t\tonClick={() => deleteAppointment(singleAppointment.id)}\n\t\t\t>Eliminar &times;</button>\n\t\t</div>\n\t);\n};\n\nexport default Appointment;\n","import React, { Fragment, useState } from 'react';\nimport {v4 as uuid } from 'uuid'\nimport PropTypes from 'prop-types'\n\nconst Form = ({addAppointmnet}) => {\n    const [appointment, setAppointment] = useState({\n        pet: '',\n        owner: '',\n        date: '',\n        time: '',\n        symptom: ''\n    })\n    const [error, setError] = useState(false)\n\n    const handleChange = e => {\n        setAppointment({\n            ...appointment,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    const handleSubmit = e => {\n        e.preventDefault()\n        const valuesArr = Object.values(appointment)\n        const notEmpty = valuesArr.every(value => value.trim() !== '')\n        setError(!notEmpty)\n        if(!notEmpty) return\n\n        appointment.id = uuid()\n\n        addAppointmnet(appointment)\n        setAppointment({\n            pet: '',\n            owner: '',\n            date: '',\n            time: '',\n            symptom: ''\n        })\n        e.target.reset()\n    }\n    return ( \n        <Fragment>\n            <h2>Create Appointment</h2>\n            {error ?  <p className=\"alerta-error\">Todos Los Campos Son Obligatorios</p> : null}\n            <form\n                onSubmit={handleSubmit}\n            >\n                <label>Pet Name</label>\n                <input\n                    type=\"text\"\n                    name=\"pet\"\n                    className=\"u-full-width\"\n                    placeholder=\"Pinky\"\n                    onChange={handleChange}\n                />\n                <label>Owner</label>\n                <input\n                    type=\"text\"\n                    name=\"owner\"\n                    className=\"u-full-width\"\n                    placeholder=\"Xinia Abarca Nuñez\"\n                    onChange={handleChange}\n                />\n                <label>Date</label>\n                <input\n                    type=\"date\"\n                    name=\"date\"\n                    className=\"u-full-width\"\n                    onChange={handleChange}\n                /><label>Time</label>\n                <input\n                    type=\"time\"\n                    name=\"time\"\n                    className=\"u-full-width\"\n                    onChange={handleChange}\n                />\n                <label>Symptom</label>\n                <textarea\n                    className=\"u-full-width\"\n                    name=\"symptom\"\n                    onChange={handleChange}\n                ></textarea>\n                <button \n                    type=\"submit\"\n                    className=\"u-full-width button-primary\"\n                >Send</button>\n            </form>\n        </Fragment>\n    );\n}\n\n// I think is no longer available\nForm.proTypes = {\n    handleSubmit: PropTypes.object.isRequired\n}\n\nexport default Form;","import React, { Fragment, useState, useEffect } from 'react';\nimport Appointment from './components/Appointment';\nimport Form from './components/Form';\n\nconst App = () => {\n\tconst initialAppointment = JSON.parse(localStorage.getItem('appointments')) || []\n\n\tconst [appointmentArr, setAppointmentArr] = useState(initialAppointment);\n\n\tuseEffect(() => {\n\t\tlocalStorage.setItem('appointments', JSON.stringify(appointmentArr))\n\t}, [appointmentArr])\n\t\n\tconst addAppointmnet = (uniqAppoinment) => {\n\t\tsetAppointmentArr([...appointmentArr, uniqAppoinment]);\n\t};\n\n\tconst deleteAppointment = id => {\n\t\tconst newAppointmentArr = appointmentArr.filter(apointment => apointment.id !== id)\n\t\tsetAppointmentArr(newAppointmentArr)\n\t}\n\n\tconst title = appointmentArr.length ? 'Manage your appointments' : 'There aren\\'t appointments'\n\treturn (\n\t\t<Fragment>\n\t\t\t<h1>Administración de Pacientes</h1>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<Form addAppointmnet={addAppointmnet} />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"one-half column\">\n\t\t\t\t\t\t<h2>{title}</h2>\n\t\t\t\t\t\t{appointmentArr.map((singleAppointment) => (\n\t\t\t\t\t\t\t<Appointment\n\t\t\t\t\t\t\t\tkey={singleAppointment.id}\n\t\t\t\t\t\t\t\tsingleAppointment={singleAppointment}\n\t\t\t\t\t\t\t\tdeleteAppointment={deleteAppointment}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}